{"version":3,"file":"static/js/693.ae768b75.chunk.js","mappings":"kIAsEA,UA/De,WA4Db,OAAO,wCACR,C","sources":["pages/Team/Team.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { getSearchMovie } from 'api/moviedb-api';\n// import HomePageList from 'components/HomePageList/HomePageList';\n// import SearchForm from 'components/SearchForm/SearchForm';\n// import { Container, Section } from 'components/common.styled';\n\nconst Movies = () => {\n  // const appStatus = {\n  //   IDLE: 0,\n  //   PENDING: 1,\n  //   RESOLVED: 2,\n  //   REJECTED: 4,\n  // };\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // const [query, setQuery] = useState('');\n  // const [searchResult, setSearchResult] = useState(null);\n  // const [status, setStatus] = useState(appStatus.IDLE);\n  // const [error, setError] = useState(null);\n\n  // const queryStr = searchParams.get('query') ?? '';\n\n  // const onSearch = toSearch => {\n  //   const newQuery = toSearch !== '' ? { query: toSearch } : {};\n  //   setSearchParams(newQuery);\n  // };\n\n  // useEffect(() => {\n  //   if (queryStr !== '' && queryStr !== query) {\n  //     setStatus(appStatus.PENDING);\n  //     getSearchMovie(queryStr)\n  //       .then(response => {\n  //         setSearchResult(response);\n  //         setQuery(queryStr);\n  //         setStatus(appStatus.RESOLVED);\n  //         return;\n  //       })\n  //       .catch(error => {\n  //         setStatus(appStatus.REJECTED);\n  //         setSearchResult(null);\n  //         setError(error);\n  //       });\n  //   }\n  //   if (queryStr !== '' && queryStr === query) {\n  //     setStatus(appStatus.RESOLVED);\n  //     return;\n  //   }\n  //   if (queryStr === '') {\n  //     setStatus(appStatus.IDLE);\n  //     setQuery('');\n  //     setSearchResult(null);\n  //     return;\n  //   }\n  // }, [\n  //   query,\n  //   setSearchResult,\n  //   setStatus,\n  //   queryStr,\n  //   setQuery,\n  //   setError,\n  //   appStatus.PENDING,\n  //   appStatus.RESOLVED,\n  //   appStatus.REJECTED,\n  //   appStatus.IDLE,\n  // ]);\n\n  return <>movies</>;\n};\n\nexport default Movies;\n"],"names":[],"sourceRoot":""}